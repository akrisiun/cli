<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <Import Project="$(RepoRoot)/build/MSBuildExtensions.targets" />

  <PropertyGroup>
    <TargetFramework>$(CliTargetFramework)</TargetFramework>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <CopyBuildOutputToPublishDirectory>false</CopyBuildOutputToPublishDirectory>
    <AssetTargetFallback>dotnet5.4</AssetTargetFallback>
    <PackageId>Microsoft.DotNet.Cli.Runtime</PackageId>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IsPackable>true</IsPackable>

    <!--<TargetFramework>netcoreapp3.0</TargetFramework>-->

  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\dotnet\dotnet.csproj" />
  </ItemGroup>

  <Target Name="GetCustomPackageFiles"
          BeforeTargets="_GetPackageFiles"
          DependsOnTargets="PublishMSBuildExtensions;PublishSdks;ChmodPublishDir">
    <ItemGroup>
      <_PackageFiles Include="@(MSBuildExtensionsContent)" BuildAction="Content" PackageCopyToOutput="true" PackageFlatten="false" PackagePath="contentFiles\any\$(CliTargetFramework)\%(MSBuildExtensionsContent.PackagePath)" />
      <_PackageFiles Include="@(SdksContent)" BuildAction="Content" PackageCopyToOutput="true" PackageFlatten="false" PackagePath="contentFiles\any\$(CliTargetFramework)\%(SdksContent.PackagePath)" />

      <_BuildOutputInPackage Remove="@(_BuildOutputInPackage)" />
    </ItemGroup>
  </Target>

  <Target Name="PublishMSBuildExtensions"
          DependsOnTargets="GenerateMSBuildExtensions"
          AfterTargets="Build;Publish">
    <ItemGroup>
      <MSBuildExtensionsContent Update="@(MSBuildExtensionsContent)">
        <DestinationPath Condition="'%(MSBuildExtensionsContent.DestinationPath)' == ''">$(OutputPath)/%(MSBuildExtensionsContent.DeploymentSubpath)%(RecursiveDir)%(Filename)%(Extension)</DestinationPath>
        <PackagePath>%(MSBuildExtensionsContent.DeploymentSubpath)%(RecursiveDir)%(Filename)%(Extension)</PackagePath>
      </MSBuildExtensionsContent>
    </ItemGroup>

    <Copy SourceFiles="@(MSBuildExtensionsContent)"
          DestinationFiles="%(MSBuildExtensionsContent.DestinationPath)" />
  </Target>

  <Target Name="PublishSdks"
          AfterTargets="Build;Publish">
    <ItemGroup>
      <SdksToBundle Include="$(RepoRoot)/build/RestoreDependency.proj">
        <Properties>
          DotNetExe=$(DotNetExe);
          NuGetPackagesDir=$(NuGetPackagesDir);
          SdkLayoutDirectory=$(OutputPath)Sdks/%(BundledSdk.Identity);
          DependencyPackageName=%(BundledSdk.Identity);
          DependencyPackageVersion=%(BundledSdk.Version)
        </Properties>
      </SdksToBundle>
    </ItemGroup>

    <MSBuild
      BuildInParallel="False"
      Projects="@(SdksToBundle)"
      >
    </MSBuild>

    <ItemGroup>
      <SdksContent Include="$(OutputPath)/Sdks/**/*">
        <PackagePath>Sdks/%(RecursiveDir)%(Filename)%(Extension)</PackagePath>
      </SdksContent>
    </ItemGroup>
  </Target>

  <Target Name="CopySdksToPublishDir"
          AfterTargets="Publish">
    <Copy SourceFiles="@(MSBuildExtensionsContent)"
          DestinationFiles="@(MSBuildExtensionsContent -> '$(PublishDir)%(DeploymentSubpath)%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(SdksContent)"
          DestinationFiles="@(SdksContent -> '$(PublishDir)Sdks/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="ChmodPublishDir"
          AfterTargets="CrossgenPublishDir"
          Condition=" '$(OSName)' != 'win' ">

    <Exec Command="find $(SdkOutputDirectory) -type d -exec chmod 755 {} \;" />
    <Exec Command="find $(SdkOutputDirectory) -type f -exec chmod 644 {} \;" />
  </Target>

  <Target Name="SeparateSymbolsFromPublishDir"
          AfterTargets="CrossgenPublishDir">
    <ItemGroup>
      <PdbsToMove Include="$(PublishDir)/**/*.pdb" />
      <PdbsToMove Include="$(PublishDir)/**/*.ni.*.map" />
    </ItemGroup>

    <Move SourceFiles="@(PdbsToMove)"
          DestinationFiles="@(PdbsToMove->'$(SymbolsDirectory)/sdk/$(SdkVersion)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishStage2WithBackwardsCompatibleRuntimes"
          AfterTargets="PublishLzmaArchive;">
    <ItemGroup>
      <BackwardsCompatibleSharedFrameworks Remove="*" />
      <BackwardsCompatibleSharedFrameworks Include="$(BackwardsCompatibleSharedFrameworksPublishDirectory)/**/*" />

      <Stage2Cli Remove="*" />
      <Stage2Cli Include="$(OutputDirectory)/**/*" />
    </ItemGroup>

    <Copy SourceFiles="@(BackwardsCompatibleSharedFrameworks)"
          DestinationFiles="@(BackwardsCompatibleSharedFrameworks->'$(Stage2WithBackwardsCompatibleRuntimesOutputDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />

    <Copy SourceFiles="@(Stage2Cli)"
          DestinationFiles="@(Stage2Cli->'$(Stage2WithBackwardsCompatibleRuntimesOutputDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="RetargetVSTestConsole"
          BeforeTargets="PublishStage2WithBackwardsCompatibleRuntimes"
          AfterTargets="Publish">
    <PropertyGroup>
      <VSTestRuntimeConfigPath>$(PublishDir)/vstest.console.runtimeconfig.json</VSTestRuntimeConfigPath>
      <ReplacementPattern>"version": ".*"</ReplacementPattern>
      <ReplacementString>"version": "$(MicrosoftNETCoreAppPackageVersion)"</ReplacementString>
    </PropertyGroup>
    <ReplaceFileContents
      InputFiles="$(VSTestRuntimeConfigPath)"
      DestinationFiles="$(VSTestRuntimeConfigPath)"
      ReplacementPatterns="$(ReplacementPattern)"
      ReplacementStrings="$(ReplacementString)" />
  </Target>
</Project>
